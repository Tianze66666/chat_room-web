# Generated by Django 5.2.2 on 2025-06-19 15:08

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='频道名称')),
                ('description', models.TextField(blank=True, verbose_name='频道描述')),
                ('avatar', models.ImageField(blank=True, default='default/default_avatar.jpg', null=True, upload_to='channel_avatars/', verbose_name='频道头像')),
                ('owner_id', models.BigIntegerField(verbose_name='创建者ID')),
                ('is_all_muted', models.BooleanField(default=False, verbose_name='是否全员禁言')),
                ('join_policy', models.CharField(choices=[('public', '公开'), ('request', '申请加入'), ('private', '私密')], default='public', max_length=10, verbose_name='加入策略')),
                ('is_public', models.BooleanField(default=True, verbose_name='是否公开可搜索')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '频道',
                'verbose_name_plural': '频道管理',
                'db_table': 'channel',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChannelActionLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.BigIntegerField(verbose_name='用户ID')),
                ('channel_id', models.BigIntegerField(verbose_name='频道ID')),
                ('action', models.CharField(choices=[('enter', '进入频道'), ('leave', '离开频道'), ('kick', '被踢出'), ('ban', '被禁言'), ('unban', '解除禁言'), ('mute', '静音自己'), ('unmute', '解除静音'), ('blacklist', '拉黑'), ('whitelist', '取消拉黑'), ('custom', '其他')], max_length=20, verbose_name='行为类型')),
                ('operator_id', models.BigIntegerField(blank=True, null=True, verbose_name='操作人ID')),
                ('reason', models.TextField(blank=True, null=True, verbose_name='原因')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '频道行为记录',
                'verbose_name_plural': '频道行为日志',
                'db_table': 'channel_action_log',
                'indexes': [models.Index(fields=['user_id', 'channel_id'], name='channel_act_user_id_e12139_idx'), models.Index(fields=['channel_id', 'created_at'], name='channel_act_channel_6606c8_idx')],
            },
        ),
        migrations.CreateModel(
            name='ChannelJoinRequest',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.BigIntegerField(verbose_name='申请用户ID')),
                ('channel_id', models.BigIntegerField(verbose_name='目标频道ID')),
                ('reason', models.TextField(blank=True, verbose_name='申请理由')),
                ('status', models.CharField(choices=[('pending', '待审批'), ('approved', '已批准'), ('rejected', '已拒绝')], default='pending', max_length=10, verbose_name='审批状态')),
                ('handled_by_id', models.BigIntegerField(blank=True, null=True, verbose_name='处理人ID')),
                ('handled_at', models.DateTimeField(blank=True, null=True, verbose_name='处理时间')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='申请时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '频道加入申请',
                'verbose_name_plural': '频道加入申请管理',
                'db_table': 'channel_join_request',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user_id', 'channel_id'], name='channel_joi_user_id_f1de93_idx'), models.Index(fields=['status'], name='channel_joi_status_068b8d_idx')],
            },
        ),
        migrations.CreateModel(
            name='KickBanRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.BigIntegerField(db_index=True, verbose_name='用户ID')),
                ('channel_id', models.BigIntegerField(db_index=True, verbose_name='频道ID')),
                ('action', models.CharField(choices=[('kick', '踢出'), ('ban', '拉黑')], max_length=10, verbose_name='操作类型')),
                ('reason', models.TextField(blank=True, null=True, verbose_name='原因')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='操作时间')),
                ('operator_id', models.BigIntegerField(db_index=True, verbose_name='操作人ID')),
            ],
            options={
                'verbose_name': '踢出/拉黑记录',
                'verbose_name_plural': '踢出/拉黑记录管理',
                'db_table': 'kick_ban_record',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user_id', 'channel_id'], name='kick_ban_re_user_id_3330e1_idx')],
            },
        ),
        migrations.CreateModel(
            name='ChannelMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_admin', models.BooleanField(default=False, verbose_name='是否管理员')),
                ('is_muted', models.BooleanField(default=False, verbose_name='是否禁言')),
                ('joined_at', models.DateTimeField(auto_now_add=True, verbose_name='加入时间')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='channel.channel', verbose_name='频道')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='channel_memberships', to=settings.AUTH_USER_MODEL, verbose_name='用户ID')),
            ],
            options={
                'verbose_name': '频道成员',
                'verbose_name_plural': '频道成员管理',
                'db_table': 'chat_channel_member',
                'ordering': ['-joined_at'],
                'unique_together': {('user', 'channel')},
            },
        ),
    ]
